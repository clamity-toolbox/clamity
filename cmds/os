#!/usr/bin/env bash

# desc: OS configuration management

source $CLAMITY_ROOT/lib/_.sh || exit 1

function local_man_page {	# generic man page?
	_usage "$@"
	echo "ABSTRACT

	The OS command is for configuring and managing your local host's
	operating system.
"
	return 0
}

function check_os {
	for cmd in brew port python3 pip3 aws
	do
		_echo -n "$cmd: "
		`which $cmd >/dev/null 2>&1` || { _echo "not found" && continue; }
		case $cmd in
			aws|brew|python3|pip3|aws)
				$cmd --version;;
			port)
				$cmd version;;
			*)
				echo found;;
		esac
	done
	return 0
}

function power_mgmt_usage {
	_echo "
	clamity os pm [<attribute> [<value>]]

	attributes:
		disksleep - set disk sleep timer in all power modes to <value> minutes
		show - show all PM settings
"
}

function power_mgmt {
	[ -z "$1" ] && power_mgmt_usage && return 1
	local rc=0
	case "$1" in
		disksleep)
			[ -z "$2" ] && pmset -g|grep disksleep || _sudo pmset -a disksleep $2; rc=$?
			return $rc;;
		show)
			pmset -g; return $?;;
		*)
			_error "unknown attribute ($1)." && power_mgmt_usage && return 1;;
	esac
}

# describe sub-commands implemented here (not in external scripts)
customCmds="
\n\tcheck - probe OS for config & environment info
\n\tpm - power management
"
subcmd="$1"
[ -z "$subcmd" ] && _usage "`basename $0`" "$customCmds" && exit 1
[ "$subcmd" == help ] && local_man_page `basename $0` "$customCmds" && exit 1
shift

case "$subcmd" in
	check) check_os "$@" || exit 1;;
	pm) power_mgmt "$@" || exit 1;;
	*) _run_clamity_cmd "$CLAMITY_ROOT/cmds/`basename $0`.d" "$subcmd" "$@" || exit 1;;
esac
exit 0
