#!/usr/bin/env bash

# clamity python scripts are executed in their own virtual environment and find
# the clamity python module via $PYTHONPATH.

source $CLAMITY_ROOT/lib/_.sh || return 1

function usage {
	echo "
	clam-py update | install [<py-pkg>]   # update or install python environ or python pkg
	eval \`clam-py venv\`                   # add clamity's python venv to your search path
	clam-py <py-script>                   # run a python script in clamity's venv
"
}

function setup_venv {
	_cmds_needed python3 || return 1
	_echo "setting up python virtual environment: python3 -m venv $CLAMITY_HOME/pyvenv"
	_run python3 -m venv $CLAMITY_HOME/pyvenv
}

function install_core_modules {
	_echo "installing core python modules"
	_run $CLAMITY_HOME/pyvenv/bin/pip3 install `grep -v '^#' $CLAMITY_ROOT/etc/dependencies/core-python-modules.txt`
}

function update_pip_pkgs {
	_run $CLAMITY_HOME/pyvenv/bin/pip3 update installed || return 1
	_run $CLAMITY_HOME/pyvenv/bin/pip3 update pip || return 1
}

[ -z "$1" ] && usage && exit 1

[ "$1" == 'update' ] && [ ! -d "$CLAMITY_HOME/pyvenv/bin/python3" ] && exit 0 # py not installed
[ "$1" == 'update' ] && { update_pip_pkgs; exit $?; }

[ ! -f "$CLAMITY_HOME/pyvenv/bin/python3" ] && { setup_venv && install_core_modules || exit 1; }  # install py venv

[ "$1" == 'install' ] && { [ -z "$2" ] && exit 0 || { pip3 install $2; exit $?; } }

if [ "$1" == 'venv' ]; then
	echo $PATH | grep -q "$CLAMITY_HOME/pyvenv/bin:" || echo "export PATH=\"$CLAMITY_HOME/pyvenv/bin:$PATH\""
	exit 0
fi

export PYTHONPATH="$CLAMITY_ROOT/lib/py:$PYTHONPATH"
_run $CLAMITY_HOME/pyvenv/bin/python3 "$@"

exit 0
